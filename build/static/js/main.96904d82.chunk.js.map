{"version":3,"sources":["Resources/IMDb.png","Resources/MetaCritic.png","Components/App/popcornsmooth.png","Resources/loadingicon.svg","Components/YearSelector/YearSelector.js","util/api.js","Components/GenreSelector/GenreSelector.js","Components/RatingSelector/RatingSelector.js","Components/Movie/Movie.js","Components/MovieResults/MovieResults.js","Components/PageButtons/PageButtons.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","fetch","require","converter","fetchedMovie","id","title","poster","ratings","imdb","rating","metaCritic","metascore","runTime","runtime","releaseDate","year","plot","Api","getMovieData","genre","minRating","startYear","endYear","then","response","json","jsonResponse","a","async","movies","alert","movieOne","movieTwo","movieThree","console","log","convertedResponse","GenreSelector","props","handleChange","bind","setState","event","this","changeGenre","target","value","changeGrammar","forceUpdate","className","grammar","onChange","React","Component","RatingSelector","changeRating","defaultValue","yearArray","y","push","reverseArray","n","length","YearSelector","handleStartChange","handleEndChange","changeStartYear","Number","changeEndYear","map","key","Movie","sum","Math","round","getAverage","src","IMDb","height","width","alt","MetaCritic","MovieResults","movie","style","display","PageButtons","handleClick","createButtons","persist","toPass","innerHTML","buttonArray","index","allSuggestions","multipleSuggestions","onClick","App","state","searchActive","loading","searchTimeout","genreSelected","suggestions","results","getMovies","handlePopcornClick","handlePageClick","checkYearParameters","addToAllSuggestions","newResults","workingArray","max3Results","setTimeout","input","start","end","suggestionsIndex","Popcorn","cursor","LoadingGif","position","href","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.96904d82.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/IMDb.2dae0ee6.png\";","module.exports = __webpack_public_path__ + \"static/media/MetaCritic.34270fd3.png\";","module.exports = __webpack_public_path__ + \"static/media/popcornsmooth.ab9fd6bc.png\";","module.exports = __webpack_public_path__ + \"static/media/loadingicon.ccb6952e.svg\";","import React from 'react';\nimport '../../Resources/dropdown.css';\n\nlet yearArray = [];\nfor (let y = 2019; y > 1900; y--) {\n    yearArray.push(y);\n}\nlet reverseArray = [];\nfor (let n = yearArray.length-1; n > -1; n--) {\n    reverseArray.push(yearArray[n])\n}\n\nclass YearSelector extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleStartChange = this.handleStartChange.bind(this);\n        this.handleEndChange = this.handleEndChange.bind(this);\n    }\n\n    handleStartChange(event) {\n        this.props.changeStartYear(Number(event.target.value));\n    }\n\n    handleEndChange(event) {\n        this.props.changeEndYear(Number(event.target.value));\n    }\n    \n    render() {\n        return (\n        <div className=\"dropdown-container\">\n            <h3>I only want to watch movies created after</h3>\n            <select onChange={this.handleStartChange}>\n                    {reverseArray.map(year => <option key={year} value={year}>{year}</option>)}\n                </select>\n            <h3>and before</h3>\n                <select onChange={this.handleEndChange}>\n                    {yearArray.map(year => <option key={year} value={year}>{year}</option>)}\n                </select>\n            <h3>.</h3>\n        </div>\n    )}\n}\n\nexport default YearSelector;","const fetch = require('node-fetch');\nconst baseUrl = 'http://localhost:5000/';\n\nconst converter = (fetchedMovie) => {\n    return {\n        id: fetchedMovie.id, \n        title: fetchedMovie.title, \n        poster: fetchedMovie.poster, \n        ratings: {\n            imdb: fetchedMovie.rating, \n            metaCritic: fetchedMovie.metascore\n        },\n        runTime: fetchedMovie.runtime,\n        releaseDate: fetchedMovie.year,\n        plot: fetchedMovie.plot\n    }\n};\n\nconst Api = {\n    async getMovieData(genre, minRating, startYear, endYear) {\n\n            const response = await fetch(baseUrl+`?genre=${genre}&minrating=${minRating}&startYear=${startYear}&endYear=${endYear}`)\n            .then(response => response.json())\n            .then(async jsonResponse => {\n                if (!jsonResponse.movies[0] && endYear < 2019) {alert('There are no movies that meet your search criteria! We suggest you make one =). P.S. We can lend you a time machine'); return []}\n                if (!jsonResponse.movies[0] && endYear === 2019) {alert('There are no movies that meet your search criteria! Hollywood awaits your debut next year!!'); return []}\n\n                try {\n                    const movieOne = await jsonResponse.movies[0];\n                    const movieTwo = await jsonResponse.movies[1];\n                    const movieThree = await jsonResponse.movies[2];\n\n                    console.log(movieOne); console.log(movieTwo); console.log(movieThree); \n                // let queriedResponse = [popcornConversion(await movieOne.json()), popcornConversion(await movieTwo.json()), popcornConversion(await movieThree.json())];\n                let convertedResponse = [await converter(movieOne), await converter(movieTwo), await converter(movieThree)];\n                console.log(convertedResponse)\n                return convertedResponse;\n                } catch (error) {console.log(error)}\n            });\n            return response;\n    }\n};\n\nexport default Api;","import React from 'react';\nimport '../../Resources/dropdown.css';\n\nclass GenreSelector extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.setState = this.setState.bind(this);\n    }\n\n    handleChange(event) {\n        this.props.changeGenre(event.target.value);\n        if (event.target.value === 'Adventure' || event.target.value === 'Animation' || event.target.value === 'Action') {this.props.changeGrammar('an')}\n        else { this.props.changeGrammar('a');}\n        this.forceUpdate();\n    }\n\n    render() { return (\n        <div className=\"dropdown-container\">\n            <h3>I feel like watching {this.props.grammar}</h3>\n            <select onChange={this.handleChange}>\n                <option value=\"Action\">Action</option>\n                <option value=\"Adventure\">Adventure</option>\n                <option value=\"Animation\">Animation</option>\n                <option value=\"Biography\">Biography</option>\n                <option value=\"Comedy\">Comedy</option>\n                <option value=\"Crime\">Crime</option>\n                <option value=\"Drama\">Drama</option>\n                <option value=\"Fantasy\">Fantasy</option>\n                <option value=\"Family\">Family</option>\n                <option value=\"History\">History</option>\n                <option value=\"Music\">Music</option>\n                <option value=\"Mystery\">Mystery</option>\n                <option value=\"Sci-Fi\">Sci-Fi</option>\n                <option value=\"Romance\">Romance</option>\n                <option value=\"Thriller\">Thriller</option>\n                <option value=\"War\">War</option>\n                <option value=\"Western\">Western</option>\n                <option value=\"sci-fi\">Sci-Fi</option>\n                <option value=\"horror\">Horror</option>\n            </select>\n            <h3>movie.</h3>\n        </div>\n    )}\n}\n\nexport default GenreSelector;","import React from 'react';\nimport './../../Resources/dropdown.css';\n\nclass RatingSelector extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        console.log(event.target.value)\n        this.props.changeRating(event.target.value)\n    }\n\n    render() { return (\n        <div className=\"dropdown-container\">\n            <h3>I only want to watch movies with a rating of </h3>\n            <select defaultValue=\"7\" onChange={this.handleChange}>\n                <option value=\"1\">1/10</option>\n                <option value=\"2\">2/10</option>\n                <option value=\"3\">3/10</option>\n                <option value=\"4\">4/10</option>\n                <option value=\"5\">5/10</option>\n                <option value=\"6\">6/10</option>\n                <option value=\"7\" >7/10</option>\n                <option value=\"8\">8/10</option>\n                <option value=\"9\">9/10</option>\n            </select>\n            <h3>and above.</h3>\n        </div>\n    )}\n}\n\nexport default RatingSelector;","import React from 'react';\nimport './Movie.css';\nimport IMDb from '../../Resources/IMDb.png' ;\nimport MetaCritic from'../../Resources/MetaCritic.png';\n\nclass Movie extends React.Component {\n    getAverage() {\n        if (this.props.ratings.metaCritic === 'null') {return this.props.ratings.imdb}\n        let sum =  (Number(this.props.ratings.imdb) + (Number(this.props.ratings.metaCritic))/10)/2;\n        return Math.round(sum * 10)/10;\n    }\n    \n\n    render() { return (\n        <div id='movie-container' key={this.props.id}>\n            <div className='left flex-stretch'>\n                    <h1 className=\"header flex-center\">{this.props.title}</h1>\n                    <span className=\"left body plot\"><p className =\"flex\">{this.props.plot}</p></span>\n                    <div className =\"left footer releaseruntime\">\n                        <span><strong className=\"releaseDate\">Release Date:</strong> {this.props.releaseDate}</span> <span className=\"separator\">|</span> <span><strong>Runtime:</strong> {this.props.runTime}</span>\n                    </div>\n            </div>\n\n            <div className=\"middle flex-stretch\">\n                <span className=\"header ratingheader flex-center\"><h2>Rating:</h2></span>\n                <span className=\"body mainrating-container flex-center\"><p className=\"mainrating flex-center\">{this.getAverage()}/10</p></span>\n                <div className=\"footer ratings\">\n                    <span className=\"flex-center logos\"><img src={IMDb} height=\"40em\" width=\"40em\" alt=\"IMDb: \"></img> {(this.props.ratings.imdb) ? this.props.ratings.imdb :'N/A'}</span>\n                    <span className=\"flex-center logos\"><img src={MetaCritic} height=\"40em\" width=\"40em\" alt=\"MetaCritic: \"></img> {(this.props.ratings.metaCritic) ? this.props.ratings.metaCritic :'N/A'}</span>\n                </div>\n            </div>\n\n            <div className=\"right poster flex-center\">\n                {(this.props.poster) ? <img className=\"right poster\" src={this.props.poster} alt=\"No poster available\"></img>: null}\n            </div>\n        </div>\n        )\n    } if \n}\n\nexport default Movie;","import React from 'react';\nimport Movie from '../Movie/Movie';\nimport './MovieResults.css';\n\nclass MovieResults extends React.Component {\n    render() {\n        return (\n            <div id='MovieResults'>\n                {this.props.movies ? this.props.movies.map(movie => <Movie key={movie.id} style={{display: (this.props.poster) ? 'flex': 'block'}} title={movie.title} releaseDate={movie.releaseDate} runTime={movie.runTime} poster={movie.poster} plot={movie.plot} ratings={movie.ratings}/>): null}\n            </div>\n        )\n    }\n}\n\n\nexport default MovieResults;","import React from 'react';\nimport './PageButtons.css';\n\nclass PageButtons extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n        this.createButtons = this.createButtons.bind(this);\n    }\n\n    handleClick(event) {\n        event.persist()\n        let toPass = Number(event.target.innerHTML);\n        this.props.handleClick(toPass)\n    }\n\n    createButtons() {\n        let buttonArray = [];\n            for (let index = 0; index < this.props.allSuggestions.length; index++) {\n                buttonArray.push(index)\n            }\n        return buttonArray;\n    }\n\n    render() {\n        return (\n            <div id=\"pagebutton-container\" style={{display: (this.props.multipleSuggestions) ? 'inline-flex': 'none'}}>\n                {this.createButtons().map(index => {return <button className=\"pagebutton\" onClick={this.handleClick} key={index}>{index+1}</button>})}\n            </div>\n        )\n    }\n}\nexport default PageButtons;","import React from 'react';\nimport './App.css';\nimport Api from '../../util/api';\nimport GenreSelector from '../GenreSelector/GenreSelector';\nimport RatingSelector from '../RatingSelector/RatingSelector';\nimport YearSelector from '../YearSelector/YearSelector';\nimport MovieResults from '../MovieResults/MovieResults';\nimport PageButtons from '../PageButtons/PageButtons';\nimport Popcorn from './popcornsmooth.png';\nimport LoadingGif from '../../Resources/loadingicon.svg';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchActive: false,\n      loading: false,\n      searchTimeout: false,\n      genreSelected: 'Action',\n      minRating: 7,\n      startYear: 1901,\n      endYear: 2019,\n      grammar: 'an',\n      suggestions: [],\n      multipleSuggestions: false,\n      allSuggestions: [],\n      results: false\n    }\n\n    this.changeGenre = this.changeGenre.bind(this);\n    this.changeGrammar = this.changeGrammar.bind(this);\n    this.changeRating = this.changeRating.bind(this);\n    this.getMovies = this.getMovies.bind(this);\n    this.handlePopcornClick = this.handlePopcornClick.bind(this);\n    this.changeStartYear = this.changeStartYear.bind(this);\n    this.changeEndYear = this.changeEndYear.bind(this);\n    this.searchTimeout = this.searchTimeout.bind(this);\n    this.handlePageClick = this.handlePageClick.bind(this);\n  }\n\n  async getMovies() {\n    if (this.checkYearParameters()) {\n      // Code to make search button disappear\n      this.setState({searchTimeout: true, loading: true})\n      // Getting results through omdb.js\n      const results = await Api.getMovieData(this.state.genreSelected, this.state.minRating, this.state.startYear, this.state.endYear);\n      // console.log(results);\n      if (this.state.allSuggestions.length > 0) {this.setState({multipleSuggestions: true})}\n      const addToAllSuggestions = (newResults) => {\n        let workingArray = this.state.allSuggestions\n        workingArray.push(newResults);\n        this.setState({allSuggestions: workingArray})\n        // console.log(this.state.allSuggestions)\n      }\n      if (results === []) {this.setState({searchActive: false})}\n      if (results.length <= 3) {\n        addToAllSuggestions(results)\n        this.setState({\n          suggestions: results,\n          searchActive: true,\n          loading: false\n        })\n      }\n      else {\n        console.log('Results length is not three!')\n        let max3Results = results[0] + results[1] + results[2];\n        addToAllSuggestions(max3Results)\n        this.setState({\n          suggestions: max3Results,\n          searchActive: true,\n          loading: false\n        })\n      }\n      // Once results in, begins 5 sec timer for button to re-appear\n      setTimeout(() => {this.searchTimeout()}, 2000)\n  } else {alert('You have entered an incorrect year range!')}\n  }\n\n  checkYearParameters() {\n    return (this.state.endYear > this.state.startYear)\n  }\n\n  changeGenre(genre) {\n    this.setState({\n      genreSelected: genre\n    })\n    // console.log(this.state)\n  }\n\n  changeGrammar(input) {\n    this.setState({\n      grammar: input\n    })\n  }\n\n  changeRating(rating) {\n    this.setState({minRating: rating})\n  }\n\n  changeStartYear(start) {\n    this.setState({\n      startYear: start\n    })\n  }\n\n  changeEndYear(end) {\n    this.setState({\n      endYear: end\n    })\n  }\n\n  handlePopcornClick(){\n    this.setState({\n      suggestions: [],\n      searchActive: false,\n      searchTimeout: false,\n      multipleSuggestions: false,\n      allSuggestions: []\n    })\n  }\n\n  handlePageClick(suggestionsIndex) {\n    console.log(suggestionsIndex)\n    this.setState({suggestions: this.state.allSuggestions[suggestionsIndex -1]})\n  }\n//SearchTimeout should be set to 4000 when ready\n  searchTimeout() {\n    setTimeout(() => {\n      this.setState({searchTimeout: false})\n    }, 100)\n  }\n\n  render() {\n  return (\n    <div className=\"App\">\n      <div>\n        <img src={Popcorn} style={{height: 150, width: 150}}className={(this.state.searchActive) ?'logo pointer' :'logo'} alt=\"A popcorn icon with smiley face\" onClick={this.handlePopcornClick}></img>\n        <h1 style={{cursor: 'default'}}>Welcome to Popcorn</h1>\n      </div>\n      <div id=\"optionselector\">\n        <GenreSelector changeGenre={this.changeGenre} changeGrammar={this.changeGrammar} genre={this.state.genreSelected} grammar={this.state.grammar} />\n        <RatingSelector changeRating={this.changeRating} />\n        <YearSelector changeStartYear={this.changeStartYear} changeEndYear={this.changeEndYear} startYear={this.state.startYear} endYear={this.state.endYear} />\n      </div>\n      <button id=\"getmoviesbutton\" onClick={this.getMovies}  className={(this.state.searchActive) ? 'pointer': null} style={{ width: (this.state.searchActive) ? 200: 180, height: (this.state.searchActive) ? 50: 40, display: (this.state.searchTimeout) ? 'none' : 'block'}}> {this.state.searchActive ? \"I don't like these. Show me more!\" : 'Show me the movies!'}</button>\n      <img src={LoadingGif} alt='Bouncing loading icon' style={{height: 80, width: 80, display: (this.state.loading) ? 'inline': 'none'}}/>\n      <MovieResults movies={this.state.suggestions}/>\n      <PageButtons allSuggestions={this.state.allSuggestions} handleClick={this.handlePageClick} multipleSuggestions={this.state.multipleSuggestions} />\n      <span id=\"githublink\" style={{position: (this.state.searchActive) ? 'static' : 'fixed'}}>Created by <a href=\"https://github.com/Waterways12/\">James Darby</a></span>\n    </div>\n  );\n}};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}